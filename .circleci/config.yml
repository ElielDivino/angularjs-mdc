defaults: &defaults
  working_directory: ~/mdc
  docker:
      - image: circleci/node:6.10-browsers


version: 2
jobs:
  install:
    docker:
        - image: circleci/node:6.10-browsers
    working_directory: ~/
    steps:
      - checkout:
          path: ~/mdc

      - restore_cache:
          key: v1-repo-deps-{{ checksum "~/mdc/package-lock.json" }}

      - run:
          name: Installing Dependencies
          command: cd ~/mdc && npm install

      - save_cache:
          key: v1-repo-deps-{{ checksum "~/mdc/package-lock.json" }}
          paths:
            - ~/mdc/node_modules

      - persist_to_workspace:
          root: .
          paths:
            - mdc/['*', '!dist']
            - .ssh/*

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Running Lint
          command: npm run lint

  build_dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Building Development Distribution
          command: "npm run build"

      - persist_to_workspace:
          root: .
          paths:
            - dist/angularjs-mdc.js
            - dist/angularjs-mdc.css

  build_prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Building Production Distribution
          command: "npm run build:min"

      - persist_to_workspace:
          root: .
          paths:
            - dist/angularjs-mdc.min.js
            - dist/angularjs-mdc.min.css

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Running Unit Tests
          command: "npm run test:ci"

      - store_test_results:
          path: ~/mdc/test/

      - store_artifacts:
          path: ~/mdc/dist/

  deploy_demo:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Copy Distributible to Demo
          command: cp -R ~/mdc/dist ~/mdc/demos/assets

      - run:
          name: Copy AngularJS to Demo
          command: cp -R ~/mdc/node_modules/angular ~/mdc/demos/angular

      - run:
          name: Build Demo CSS
          command: npm run build:demos

      - deploy:
          name: Deploy to GH Pages
          command: |
            chmod +x ./ghpages-deploy.sh
            ./ghpages-deploy.sh demos


default_filters: &job_filters
  filters:
    tags:
      only: /.*/
    branches:
      ignore:
        - gh-pages
        - /no-test-.*/


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install:
          <<: *job_filters

      - lint:
          <<: *job_filters
          requires:
            - install

      - build_dev:
          <<: *job_filters
          requires:
            - install

      - build_prod:
          <<: *job_filters
          requires:
            - install

      - test:
          <<: *job_filters
          requires:
            - lint
            - build_dev
            - build_prod

      - deploy_demo:
          requires:
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/