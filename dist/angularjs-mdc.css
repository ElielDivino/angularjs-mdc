/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */
@-webkit-keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }
@keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@-webkit-keyframes mdc-ripple-fg-opacity-in {
  from {
    opacity: 0;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 1; } }

@keyframes mdc-ripple-fg-opacity-in {
  from {
    opacity: 0;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 1; } }

@-webkit-keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

@keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-button, mdc-button {
  --mdc-ripple-surface-width: 0;
  --mdc-ripple-surface-height: 0;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  will-change: transform, opacity;
  -webkit-tap-highlight-color: transparent;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  position: relative;
  min-width: 64px;
  height: 36px;
  padding: 0 16px;
  border: none;
  border-radius: 2px;
  outline: none;
  background: transparent;
  font-size: 14px;
  font-weight: 500;
  letter-spacing: .04em;
  line-height: 36px;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  overflow: hidden;
  vertical-align: middle;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-appearance: none; }
  .mdc-button:not(.mdc-ripple-upgraded):hover::before, mdc-button:not(.mdc-ripple-upgraded):hover::before, .mdc-button:not(.mdc-ripple-upgraded):focus::before, mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button:not(.mdc-ripple-upgraded):active::after, mdc-button:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 85ms;
            transition-duration: 85ms;
    opacity: .6; }
  .mdc-button::before, mdc-button::before {
    background-color: rgba(0, 0, 0, 0.06);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-button.mdc-ripple-upgraded::before, mdc-button.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-button.mdc-ripple-upgraded--background-focused::before, mdc-button.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-button.mdc-ripple-upgraded--background-active-fill::before, mdc-button.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-button.mdc-ripple-upgraded--unbounded::before, mdc-button.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-button::after, mdc-button::after {
    background-color: rgba(0, 0, 0, 0.06);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-button.mdc-ripple-upgraded::after, mdc-button.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after, mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-button.mdc-ripple-upgraded--unbounded::after, mdc-button.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-button.mdc-ripple-upgraded--foreground-activation::after, mdc-button.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after, mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }
  .mdc-button:not(.mdc-ripple-upgraded), mdc-button:not(.mdc-ripple-upgraded) {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }
  .mdc-button--theme-dark,
  .mdc-theme--dark .mdc-button,
  .mdc-theme--dark mdc-button {
    --mdc-ripple-surface-width: 0;
    --mdc-ripple-surface-height: 0;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    will-change: transform, opacity;
    -webkit-tap-highlight-color: transparent;
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-dark, white); }
    .mdc-button--theme-dark:not(.mdc-ripple-upgraded):hover::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):active::after,
    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):hover::before,
    .mdc-theme--dark mdc-button:not(.mdc-ripple-upgraded):hover::before,
    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):focus::before,
    .mdc-theme--dark mdc-button:not(.mdc-ripple-upgraded):focus::before,
    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):active::after,
    .mdc-theme--dark mdc-button:not(.mdc-ripple-upgraded):active::after {
      -webkit-transition-duration: 85ms;
              transition-duration: 85ms;
      opacity: .6; }
    .mdc-button--theme-dark::before,
    .mdc-theme--dark .mdc-button::before,
    .mdc-theme--dark mdc-button::before {
      background-color: rgba(255, 255, 255, 0.14);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
    .mdc-button--theme-dark.mdc-ripple-upgraded::before,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::before,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded::before {
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button--theme-dark.mdc-ripple-upgraded--background-focused::before,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-focused::before,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--background-focused::before {
      opacity: .99999; }
    .mdc-button--theme-dark.mdc-ripple-upgraded--background-active-fill::before,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-active-fill::before,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--background-active-fill::before {
      -webkit-transition-duration: 120ms;
              transition-duration: 120ms;
      opacity: 1; }
    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::before,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::before,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--unbounded::before {
      /* @alternate */
      top: calc(50% - 50%);
      top: var(--mdc-ripple-top, calc(50% - 50%));
      /* @alternate */
      left: calc(50% - 50%);
      left: var(--mdc-ripple-left, calc(50% - 50%));
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button--theme-dark::after,
    .mdc-theme--dark .mdc-button::after,
    .mdc-theme--dark mdc-button::after {
      background-color: rgba(255, 255, 255, 0.14);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
    .mdc-button--theme-dark.mdc-ripple-upgraded::after,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::after,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded::after {
      top: 0;
      left: 0;
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center;
      opacity: 0; }
    .mdc-button--theme-dark:not(.mdc-ripple-upgraded--unbounded)::after,
    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after,
    .mdc-theme--dark mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::after,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::after,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--unbounded::after {
      /* @alternate */
      top: 0;
      top: var(--mdc-ripple-top, 0);
      /* @alternate */
      left: 0;
      left: var(--mdc-ripple-left, 0);
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-activation::after,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-activation::after,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--foreground-activation::after {
      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-deactivation::after,
    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after,
    .mdc-theme--dark mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {
      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
      -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
              animation: 83ms mdc-ripple-fg-opacity-out; }
    .mdc-button--theme-dark:not(.mdc-ripple-upgraded),
    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded),
    .mdc-theme--dark mdc-button:not(.mdc-ripple-upgraded) {
      -webkit-tap-highlight-color: rgba(255, 255, 255, 0.18); }
  .mdc-button.mdc-button--primary, mdc-button.mdc-button--primary {
    --mdc-ripple-surface-width: 0;
    --mdc-ripple-surface-height: 0;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    will-change: transform, opacity;
    -webkit-tap-highlight-color: transparent; }
    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):active::after, mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {
      -webkit-transition-duration: 85ms;
              transition-duration: 85ms;
      opacity: .6; }
    .mdc-button.mdc-button--primary::before, mdc-button.mdc-button--primary::before {
      /* @alternate */
      background-color: rgba(63, 81, 181, 0.12);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
      @supports (background-color: color(green a(10%))) {
        .mdc-button.mdc-button--primary::before, mdc-button.mdc-button--primary::before {
          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::before, mdc-button.mdc-button--primary.mdc-ripple-upgraded::before {
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-focused::before, mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {
      opacity: .99999; }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before, mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {
      -webkit-transition-duration: 120ms;
              transition-duration: 120ms;
      opacity: 1; }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::before, mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {
      /* @alternate */
      top: calc(50% - 50%);
      top: var(--mdc-ripple-top, calc(50% - 50%));
      /* @alternate */
      left: calc(50% - 50%);
      left: var(--mdc-ripple-left, calc(50% - 50%));
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button.mdc-button--primary::after, mdc-button.mdc-button--primary::after {
      /* @alternate */
      background-color: rgba(63, 81, 181, 0.12);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
      @supports (background-color: color(green a(10%))) {
        .mdc-button.mdc-button--primary::after, mdc-button.mdc-button--primary::after {
          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::after, mdc-button.mdc-button--primary.mdc-ripple-upgraded::after {
      top: 0;
      left: 0;
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center;
      opacity: 0; }
    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after, mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::after, mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {
      /* @alternate */
      top: 0;
      top: var(--mdc-ripple-top, 0);
      /* @alternate */
      left: 0;
      left: var(--mdc-ripple-left, 0);
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after, mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {
      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after, mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {
      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
      -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
              animation: 83ms mdc-ripple-fg-opacity-out; }
  .mdc-button.mdc-button--accent, mdc-button.mdc-button--accent {
    --mdc-ripple-surface-width: 0;
    --mdc-ripple-surface-height: 0;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-scale: 1;
    --mdc-ripple-fg-translate-end: 0;
    --mdc-ripple-fg-translate-start: 0;
    will-change: transform, opacity;
    -webkit-tap-highlight-color: transparent; }
    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):active::after, mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {
      -webkit-transition-duration: 85ms;
              transition-duration: 85ms;
      opacity: .6; }
    .mdc-button.mdc-button--accent::before, mdc-button.mdc-button--accent::before {
      /* @alternate */
      background-color: rgba(255, 64, 129, 0.12);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
      @supports (background-color: color(green a(10%))) {
        .mdc-button.mdc-button--accent::before, mdc-button.mdc-button--accent::before {
          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::before, mdc-button.mdc-button--accent.mdc-ripple-upgraded::before {
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-focused::before, mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {
      opacity: .99999; }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before, mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {
      -webkit-transition-duration: 120ms;
              transition-duration: 120ms;
      opacity: 1; }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::before, mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {
      /* @alternate */
      top: calc(50% - 50%);
      top: var(--mdc-ripple-top, calc(50% - 50%));
      /* @alternate */
      left: calc(50% - 50%);
      left: var(--mdc-ripple-left, calc(50% - 50%));
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
              transform: scale(var(--mdc-ripple-fg-scale, 0)); }
    .mdc-button.mdc-button--accent::after, mdc-button.mdc-button--accent::after {
      /* @alternate */
      background-color: rgba(255, 64, 129, 0.12);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transition: opacity 250ms linear;
      transition: opacity 250ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
      @supports (background-color: color(green a(10%))) {
        .mdc-button.mdc-button--accent::after, mdc-button.mdc-button--accent::after {
          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::after, mdc-button.mdc-button--accent.mdc-ripple-upgraded::after {
      top: 0;
      left: 0;
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center;
      opacity: 0; }
    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after, mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::after, mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {
      /* @alternate */
      top: 0;
      top: var(--mdc-ripple-top, 0);
      /* @alternate */
      left: 0;
      left: var(--mdc-ripple-left, 0);
      /* @alternate */
      width: 100%;
      width: var(--mdc-ripple-fg-size, 100%);
      /* @alternate */
      height: 100%;
      height: var(--mdc-ripple-fg-size, 100%);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after, mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {
      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after, mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {
      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
      -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
              animation: 83ms mdc-ripple-fg-opacity-out; }
  .mdc-button:active, mdc-button:active {
    outline: none; }
  .mdc-button:hover, mdc-button:hover {
    cursor: pointer; }
  .mdc-button::-moz-focus-inner, mdc-button::-moz-focus-inner {
    padding: 0;
    border: 0; }
  .mdc-button--dense {
    height: 32px;
    font-size: .8125rem;
    line-height: 32px; }
  .mdc-button--raised {
    -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
    -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
    will-change: box-shadow;
    min-width: 88px; }
    .mdc-button--raised:active {
      -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
              box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }
    .mdc-button--raised.mdc-button--primary {
      --mdc-ripple-surface-width: 0;
      --mdc-ripple-surface-height: 0;
      --mdc-ripple-fg-size: 0;
      --mdc-ripple-left: 0;
      --mdc-ripple-top: 0;
      --mdc-ripple-fg-scale: 1;
      --mdc-ripple-fg-translate-end: 0;
      --mdc-ripple-fg-translate-start: 0;
      will-change: transform, opacity;
      -webkit-tap-highlight-color: transparent; }
      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {
        -webkit-transition-duration: 85ms;
                transition-duration: 85ms;
        opacity: .6; }
      .mdc-button--raised.mdc-button--primary::before {
        background-color: rgba(255, 255, 255, 0.14);
        position: absolute;
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        -webkit-transition: opacity 250ms linear;
        transition: opacity 250ms linear;
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: ""; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::before {
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        /* @alternate */
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
                transform: scale(var(--mdc-ripple-fg-scale, 0)); }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {
        opacity: .99999; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {
        -webkit-transition-duration: 120ms;
                transition-duration: 120ms;
        opacity: 1; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {
        /* @alternate */
        top: calc(50% - 50%);
        top: var(--mdc-ripple-top, calc(50% - 50%));
        /* @alternate */
        left: calc(50% - 50%);
        left: var(--mdc-ripple-left, calc(50% - 50%));
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
                transform: scale(var(--mdc-ripple-fg-scale, 0)); }
      .mdc-button--raised.mdc-button--primary::after {
        background-color: rgba(255, 255, 255, 0.14);
        position: absolute;
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        -webkit-transition: opacity 250ms linear;
        transition: opacity 250ms linear;
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: ""; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::after {
        top: 0;
        left: 0;
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform-origin: center center;
                transform-origin: center center;
        opacity: 0; }
      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {
        -webkit-transform-origin: center center;
                transform-origin: center center; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {
        /* @alternate */
        top: 0;
        top: var(--mdc-ripple-top, 0);
        /* @alternate */
        left: 0;
        left: var(--mdc-ripple-left, 0);
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform-origin: center center;
                transform-origin: center center; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {
        -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
                animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
                transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
        -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
                animation: 83ms mdc-ripple-fg-opacity-out; }
    .mdc-button--raised.mdc-button--accent {
      --mdc-ripple-surface-width: 0;
      --mdc-ripple-surface-height: 0;
      --mdc-ripple-fg-size: 0;
      --mdc-ripple-left: 0;
      --mdc-ripple-top: 0;
      --mdc-ripple-fg-scale: 1;
      --mdc-ripple-fg-translate-end: 0;
      --mdc-ripple-fg-translate-start: 0;
      will-change: transform, opacity;
      -webkit-tap-highlight-color: transparent; }
      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {
        -webkit-transition-duration: 85ms;
                transition-duration: 85ms;
        opacity: .6; }
      .mdc-button--raised.mdc-button--accent::before {
        background-color: rgba(255, 255, 255, 0.14);
        position: absolute;
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        -webkit-transition: opacity 250ms linear;
        transition: opacity 250ms linear;
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: ""; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::before {
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        /* @alternate */
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
                transform: scale(var(--mdc-ripple-fg-scale, 0)); }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {
        opacity: .99999; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {
        -webkit-transition-duration: 120ms;
                transition-duration: 120ms;
        opacity: 1; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {
        /* @alternate */
        top: calc(50% - 50%);
        top: var(--mdc-ripple-top, calc(50% - 50%));
        /* @alternate */
        left: calc(50% - 50%);
        left: var(--mdc-ripple-left, calc(50% - 50%));
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
                transform: scale(var(--mdc-ripple-fg-scale, 0)); }
      .mdc-button--raised.mdc-button--accent::after {
        background-color: rgba(255, 255, 255, 0.14);
        position: absolute;
        top: calc(50% - 100%);
        left: calc(50% - 100%);
        width: 200%;
        height: 200%;
        -webkit-transition: opacity 250ms linear;
        transition: opacity 250ms linear;
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: ""; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::after {
        top: 0;
        left: 0;
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform-origin: center center;
                transform-origin: center center;
        opacity: 0; }
      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {
        -webkit-transform-origin: center center;
                transform-origin: center center; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {
        /* @alternate */
        top: 0;
        top: var(--mdc-ripple-top, 0);
        /* @alternate */
        left: 0;
        left: var(--mdc-ripple-left, 0);
        /* @alternate */
        width: 100%;
        width: var(--mdc-ripple-fg-size, 100%);
        /* @alternate */
        height: 100%;
        height: var(--mdc-ripple-fg-size, 100%);
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transform-origin: center center;
                transform-origin: center center; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {
        -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
                animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {
        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
                transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
        -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
                animation: 83ms mdc-ripple-fg-opacity-out; }
    .mdc-button--theme-dark .mdc-button--raised,
    .mdc-theme--dark .mdc-button--raised {
      /* @alternate */
      background-color: #3f51b5;
      background-color: var(--mdc-theme-primary, #3f51b5);
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-primary, white); }
      .mdc-button--theme-dark .mdc-button--raised::before,
      .mdc-theme--dark .mdc-button--raised::before {
        color: black; }
  .mdc-button--primary {
    /* @alternate */
    color: #3f51b5;
    color: var(--mdc-theme-primary, #3f51b5); }
    .mdc-button--theme-dark .mdc-button--primary,
    .mdc-theme--dark .mdc-button--primary {
      /* @alternate */
      color: #3f51b5;
      color: var(--mdc-theme-primary, #3f51b5); }
    .mdc-button--primary.mdc-button--raised {
      /* @alternate */
      background-color: #3f51b5;
      background-color: var(--mdc-theme-primary, #3f51b5);
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-primary, white); }
      .mdc-button--primary.mdc-button--raised::before {
        color: black; }
  .mdc-button--accent {
    /* @alternate */
    color: #ff4081;
    color: var(--mdc-theme-accent, #ff4081); }
    .mdc-button--theme-dark .mdc-button--accent,
    .mdc-theme--dark .mdc-button--accent {
      /* @alternate */
      color: #ff4081;
      color: var(--mdc-theme-accent, #ff4081); }
    .mdc-button--accent.mdc-button--raised {
      /* @alternate */
      background-color: #ff4081;
      background-color: var(--mdc-theme-accent, #ff4081);
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-accent, white); }
      .mdc-button--accent.mdc-button--raised::before {
        color: black; }
  .mdc-button--compact {
    padding: 0 8px; }
  fieldset:disabled .mdc-button, fieldset:disabled mdc-button, .mdc-button:disabled, mdc-button:disabled, .mdc-button[disabled], mdc-button[disabled] {
    color: rgba(0, 0, 0, 0.26);
    cursor: default;
    pointer-events: none; }
    .mdc-button--theme-dark fieldset:disabled .mdc-button, .mdc-button--theme-dark fieldset:disabled mdc-button,
    .mdc-theme--dark fieldset:disabled .mdc-button,
    .mdc-theme--dark fieldset:disabled mdc-button, .mdc-button--theme-dark .mdc-button:disabled, .mdc-button--theme-dark mdc-button:disabled, .mdc-button--theme-dark .mdc-button[disabled], .mdc-button--theme-dark mdc-button[disabled],
    .mdc-theme--dark .mdc-button:disabled,
    .mdc-theme--dark mdc-button:disabled,
    .mdc-theme--dark .mdc-button[disabled],
    .mdc-theme--dark mdc-button[disabled] {
      color: rgba(255, 255, 255, 0.3); }
  fieldset:disabled .mdc-button--raised, .mdc-button--raised:disabled, .mdc-button--raised[disabled] {
    -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);
    background-color: rgba(0, 0, 0, 0.12);
    pointer-events: none; }
    .mdc-button--theme-dark fieldset:disabled .mdc-button--raised,
    .mdc-theme--dark fieldset:disabled .mdc-button--raised, .mdc-button--theme-dark .mdc-button--raised:disabled, .mdc-button--theme-dark .mdc-button--raised[disabled],
    .mdc-theme--dark .mdc-button--raised:disabled,
    .mdc-theme--dark .mdc-button--raised[disabled] {
      background-color: rgba(255, 255, 255, 0.12); }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
.mdc-card, mdc-card {
  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 2px;
  overflow: hidden; }
  .mdc-card__primary, mdc-card-primary {
    padding: 16px; }
    .mdc-card__primary .mdc-card__title--large, mdc-card-primary .mdc-card__title--large {
      padding-top: 8px; }
    .mdc-card__primary:last-child, mdc-card-primary:last-child {
      padding-bottom: 24px; }
  .mdc-card__supporting-text, mdc-card-supporting-text {
    padding: 8px 16px;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    line-height: 1.25rem;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
    .mdc-card--theme-dark .mdc-card__supporting-text, .mdc-card--theme-dark mdc-card-supporting-text,
    .mdc-theme--dark .mdc-card__supporting-text,
    .mdc-theme--dark mdc-card-supporting-text {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white); }
    .mdc-card__primary + .mdc-card__supporting-text, mdc-card-primary + .mdc-card__supporting-text, .mdc-card__primary + mdc-card-supporting-text, mdc-card-primary + mdc-card-supporting-text {
      margin-top: -8px;
      padding-top: 0; }
    .mdc-card__supporting-text:last-child, mdc-card-supporting-text:last-child {
      padding-bottom: 24px; }
  .mdc-card__actions, mdc-card-actions {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 8px;
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
    .mdc-card--theme-dark .mdc-card__actions, .mdc-card--theme-dark mdc-card-actions,
    .mdc-theme--dark .mdc-card__actions,
    .mdc-theme--dark mdc-card-actions {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white); }
    .mdc-card__actions .mdc-card__action, mdc-card-actions .mdc-card__action {
      margin: 0 8px 0 0; }
      [dir="rtl"] .mdc-card__actions .mdc-card__action, [dir="rtl"] mdc-card-actions .mdc-card__action, .mdc-card__actions .mdc-card__action[dir="rtl"], mdc-card-actions .mdc-card__action[dir="rtl"] {
        margin: 0 0 0 8px; }
    .mdc-card__actions .mdc-card__action:last-child, mdc-card-actions .mdc-card__action:last-child {
      margin-left: 0;
      margin-right: 0; }
      [dir="rtl"] .mdc-card__actions .mdc-card__action:last-child, [dir="rtl"] mdc-card-actions .mdc-card__action:last-child, .mdc-card__actions .mdc-card__action:last-child[dir="rtl"], mdc-card-actions .mdc-card__action:last-child[dir="rtl"] {
        margin-left: 0;
        margin-right: 0; }
    .mdc-card__actions--vertical {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-flow: column;
              flex-flow: column;
      -webkit-box-align: start;
          -ms-flex-align: start;
              align-items: flex-start; }
      .mdc-card__actions--vertical .mdc-card__action {
        margin: 0 0 4px; }
      .mdc-card__actions--vertical .mdc-card__action:last-child {
        margin-bottom: 0; }
  .mdc-card__media, mdc-card-media {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    padding: 16px;
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .mdc-card__media-item {
    display: inline-block;
    width: auto;
    height: 80px;
    margin: 16px 0 0;
    padding: 0; }
    .mdc-card__media-item--1dot5x {
      width: auto;
      height: 120px; }
    .mdc-card__media-item--2x {
      width: auto;
      height: 160px; }
    .mdc-card__media-item--3x {
      width: auto;
      height: 240px; }
  .mdc-card__title, mdc-card-title {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    line-height: 1.5rem;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
    margin: -.063rem 0; }
    .mdc-card--theme-dark .mdc-card__title, .mdc-card--theme-dark mdc-card-title,
    .mdc-theme--dark .mdc-card__title,
    .mdc-theme--dark mdc-card-title {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white); }
  .mdc-card__title--large {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1.5rem;
    font-weight: 400;
    letter-spacing: normal;
    line-height: 2rem;
    margin: 0; }
  .mdc-card__subtitle, mdc-card-subtitle {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    line-height: 1.25rem;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
    margin: -.063rem 0; }
    .mdc-card--theme-dark .mdc-card__subtitle, .mdc-card--theme-dark mdc-card-subtitle,
    .mdc-theme--dark .mdc-card__subtitle,
    .mdc-theme--dark mdc-card-subtitle {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white); }
  .mdc-card__horizontal-block, mdc-card-horizontal-block {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    padding: 0;
    padding-left: 0;
    padding-right: 16px; }
    [dir="rtl"] .mdc-card__horizontal-block, [dir="rtl"] mdc-card-horizontal-block, .mdc-card__horizontal-block[dir="rtl"], mdc-card-horizontal-block[dir="rtl"] {
      padding-left: 16px;
      padding-right: 0; }
    .mdc-card__horizontal-block .mdc-card__actions--vertical, mdc-card-horizontal-block .mdc-card__actions--vertical {
      margin: 16px; }
    .mdc-card__horizontal-block .mdc-card__media-item, mdc-card-horizontal-block .mdc-card__media-item {
      margin-left: 16px;
      margin-right: 0; }
      [dir="rtl"] .mdc-card__horizontal-block .mdc-card__media-item, [dir="rtl"] mdc-card-horizontal-block .mdc-card__media-item, .mdc-card__horizontal-block .mdc-card__media-item[dir="rtl"], mdc-card-horizontal-block .mdc-card__media-item[dir="rtl"] {
        margin-left: 0;
        margin-right: 16px; }
    .mdc-card__horizontal-block .mdc-card__media-item--3x, mdc-card-horizontal-block .mdc-card__media-item--3x {
      margin-bottom: 16px; }

mdc-card-title {
  display: block; }

mdc-card-subtitle {
  display: block; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
:root {
  --mdc-dialog-dark-theme-bg-color: #303030; }

.mdc-dialog, mdc-dialog {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
  height: 100%;
  visibility: hidden;
  z-index: 2; }
  .mdc-dialog__backdrop {
    position: fixed;
    top: 0;
    left: 0;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    width: 100%;
    height: 100%;
    /* @alternate */
    background-color: rgba(0, 0, 0, 0.87);
    background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));
    opacity: 0;
    z-index: -1; }
  .mdc-dialog__surface {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
            box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
    width: calc(100% - 30px);
    min-width: 640px;
    max-width: 865px;
    -webkit-transform: translateY(150px) scale(0.8);
            transform: translateY(150px) scale(0.8);
    border-radius: 2px;
    /* @alternate */
    background-color: #fff;
    background-color: var(--mdc-theme-background, #fff);
    opacity: 0; }
    .mdc-dialog--theme-dark .mdc-dialog__surface,
    .mdc-theme--dark .mdc-dialog__surface {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white);
      background-color: #303030;
      background-color: var(--mdc-dialog-dark-theme-bg-color, #303030); }
    [dir="rtl"] .mdc-dialog .mdc-dialog__surface, [dir="rtl"] mdc-dialog .mdc-dialog__surface,
    .mdc-dialog[dir="rtl"] .mdc-dialog__surface, mdc-dialog[dir="rtl"] .mdc-dialog__surface {
      text-align: right; }
  .mdc-dialog__header, mdc-dialog-header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    padding: 24px 24px 0; }
    .mdc-dialog__header__empty {
      padding: 0; }
    [dir="rtl"] .mdc-dialog .mdc-dialog__header, [dir="rtl"] mdc-dialog .mdc-dialog__header, [dir="rtl"] .mdc-dialog mdc-dialog-header, [dir="rtl"] mdc-dialog mdc-dialog-header,
    .mdc-dialog[dir="rtl"] .mdc-dialog__header, mdc-dialog[dir="rtl"] .mdc-dialog__header,
    .mdc-dialog[dir="rtl"] mdc-dialog-header, mdc-dialog[dir="rtl"] mdc-dialog-header {
      text-align: right; }
    .mdc-dialog__header__title, mdc-dialog-title {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
      margin: 0;
      font-family: Roboto, sans-serif;
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      font-size: 1.25rem;
      font-weight: 500;
      letter-spacing: 0.02em;
      line-height: 2rem; }
  .mdc-dialog__body, mdc-dialog-body {
    margin-top: 20px;
    padding: 0 24px 24px;
    /* @alternate */
    color: rgba(0, 0, 0, 0.54);
    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    line-height: 1.25rem; }
    .mdc-dialog--theme-dark.mdc-dialog__body, mdc-dialog-body.mdc-dialog--theme-dark,
    .mdc-theme--dark .mdc-dialog__body,
    .mdc-theme--dark mdc-dialog-body {
      /* @alternate */
      color: rgba(255, 255, 255, 0.7);
      color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
    .mdc-dialog__body--scrollable {
      max-height: 195px;
      border-top: 1px solid rgba(0, 0, 0, 0.1);
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      overflow-y: scroll;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch; }
  .mdc-dialog__footer, mdc-dialog-footer {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    padding: 8px; }
    .mdc-dialog__footer__button {
      margin-left: 0;
      margin-right: 8px; }
      [dir="rtl"] .mdc-dialog__footer__button, .mdc-dialog__footer__button[dir="rtl"] {
        margin-left: 8px;
        margin-right: 0; }
      .mdc-dialog__footer__button:last-child {
        margin-left: 0;
        margin-right: 0; }
        [dir="rtl"] .mdc-dialog__footer__button:last-child, .mdc-dialog__footer__button:last-child[dir="rtl"] {
          margin-left: 0;
          margin-right: 0; }
  @media (max-width: 640px) {
    .mdc-dialog, mdc-dialog {
      min-width: 280px; }
      .mdc-dialog__surface {
        min-width: 280px; }
      .mdc-dialog__body, mdc-dialog-body {
        line-height: 24px; } }
  .mdc-dialog--animating {
    visibility: visible; }
    .mdc-dialog--animating .mdc-dialog__backdrop {
      -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
    .mdc-dialog--animating .mdc-dialog--open .mdc-dialog__surface {
      -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
    .mdc-dialog--animating .mdc-dialog__surface {
      -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);
      transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
  .mdc-dialog--open {
    visibility: visible; }
    .mdc-dialog--open .mdc-dialog__backdrop {
      opacity: .3; }
    .mdc-dialog--open .mdc-dialog__surface {
      -webkit-transform: translateY(0) scale(1);
              transform: translateY(0) scale(1);
      opacity: 1; }

.mdc-dialog-scroll-lock {
  height: 100vh;
  overflow: hidden; }

mdc-icon {
  margin: auto;
  background-repeat: no-repeat no-repeat;
  display: inline-block;
  vertical-align: middle;
  fill: currentColor;
  height: 24px;
  width: 24px;
  min-height: 24px;
  min-width: 24px; }
  mdc-icon svg {
    pointer-events: none;
    display: block; }
  mdc-icon[mdc-font-icon] {
    line-height: 24px;
    width: auto; }

.mdc-icon--18, .material-icons.mdc-icon--18 {
  font-size: 18px;
  height: 18px;
  width: 18px;
  min-height: 18px;
  min-width: 18px; }

.mdc-icon--24, .material-icons.mdc-icon--24 {
  font-size: 24px;
  height: 24px;
  width: 24px;
  min-height: 24px;
  min-width: 24px; }

.mdc-icon--36, .material-icons.mdc-icon--36 {
  font-size: 36px;
  height: 36px;
  width: 36px;
  min-height: 36px;
  min-width: 36px; }

.mdc-icon--48, .material-icons.mdc-icon--48 {
  font-size: 48px;
  height: 48px;
  width: 48px;
  min-height: 48px;
  min-width: 48px; }

/** postcss-bem-linter: define icon-toggle */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */
@keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@keyframes mdc-ripple-fg-opacity-in {
  from {
    opacity: 0;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 1; } }

@keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
.mdc-icon-toggle, mdc-icon-toggle {
  /* @alternate */
  color: rgba(0, 0, 0, 0.54);
  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));
  --mdc-ripple-surface-width: 0;
  --mdc-ripple-surface-height: 0;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  will-change: transform, opacity;
  -webkit-tap-highlight-color: transparent;
  will-change: initial;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 48px;
  height: 48px;
  padding: 12px;
  outline: none;
  font-size: 1.5rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }
  .mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after, mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 85ms;
            transition-duration: 85ms;
    opacity: .6; }
  .mdc-icon-toggle::before, mdc-icon-toggle::before {
    background-color: rgba(0, 0, 0, 0.062);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-icon-toggle.mdc-ripple-upgraded::before, mdc-icon-toggle.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before, mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before, mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before, mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle::after, mdc-icon-toggle::after {
    background-color: rgba(0, 0, 0, 0.062);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-icon-toggle.mdc-ripple-upgraded::after, mdc-icon-toggle.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after, mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after, mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after, mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after, mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::before, mdc-icon-toggle.mdc-icon-toggle--theme-dark::before,
  .mdc-theme--dark .mdc-icon-toggle::before,
  .mdc-theme--dark mdc-icon-toggle::before {
    background-color: rgba(255, 255, 255, 0.16);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::before, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded::before,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::before,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--background-active-fill::before,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--unbounded::before,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark::after,
  .mdc-theme--dark .mdc-icon-toggle::after,
  .mdc-theme--dark mdc-icon-toggle::after {
    background-color: rgba(255, 255, 255, 0.16);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded::after,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::after,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark:not(.mdc-ripple-upgraded--unbounded)::after,
  .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after,
  .mdc-theme--dark mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--unbounded::after,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--foreground-activation::after,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after, mdc-icon-toggle.mdc-icon-toggle--theme-dark.mdc-ripple-upgraded--foreground-deactivation::after,
  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after,
  .mdc-theme--dark mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }
  .mdc-icon-toggle::after, mdc-icon-toggle::after {
    position: absolute;
    border-radius: 50%;
    content: "";
    opacity: 0;
    pointer-events: none; }
  .mdc-icon-toggle--theme-dark,
  .mdc-theme--dark .mdc-icon-toggle,
  .mdc-theme--dark mdc-icon-toggle {
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-icon-toggle--primary {
  /* @alternate */
  color: #3f51b5;
  color: var(--mdc-theme-primary, #3f51b5); }
  .mdc-icon-toggle--primary::before {
    /* @alternate */
    background-color: rgba(63, 81, 181, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-icon-toggle--primary::before {
        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--primary::after {
    /* @alternate */
    background-color: rgba(63, 81, 181, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-icon-toggle--primary::after {
        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-icon-toggle--primary:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }

.mdc-icon-toggle--accent {
  /* @alternate */
  color: #ff4081;
  color: var(--mdc-theme-accent, #ff4081); }
  .mdc-icon-toggle--accent::before {
    /* @alternate */
    background-color: rgba(255, 64, 129, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-icon-toggle--accent::before {
        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-icon-toggle--accent::after {
    /* @alternate */
    background-color: rgba(255, 64, 129, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-icon-toggle--accent::after {
        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-icon-toggle--accent:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }

.mdc-icon-toggle--disabled {
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));
  pointer-events: none; }
  .mdc-icon-toggle--theme-dark.mdc-icon-toggle--disabled,
  .mdc-theme--dark .mdc-icon-toggle--disabled {
    /* @alternate */
    color: rgba(255, 255, 255, 0.5);
    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }

/** postcss-bem-linter: end */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */
@keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }

@keyframes mdc-ripple-fg-opacity-in {
  from {
    opacity: 0;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 1; } }

@keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

/**
 * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.
 *
 * Usage Example:
 * ```scss
 * .mdc-foo {
 *   position: absolute;
 *   left: 0;
 *
 *   @include mdc-rtl {
 *     left: auto;
 *     right: 0;
 *   }
 *
 *   &__bar {
 *     margin-left: 4px;
 *     @include mdc-rtl(".mdc-foo") {
 *       margin-left: auto;
 *       margin-right: 4px;
 *     }
 *   }
 * }
 *
 * .mdc-foo--mod {
 *   padding-left: 4px;
 *
 *   @include mdc-rtl {
 *     padding-left: auto;
 *     padding-right: 4px;
 *   }
 * }
 * ```
 *
 * Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work
 * in most cases, it will in some cases lead to false negatives, e.g.
 *
 * ```html
 * <html dir="rtl">
 *   <!-- ... -->
 *   <div dir="ltr">
 *     <div class="mdc-foo">Styled incorrectly as RTL!</div>
 *   </div>
 * </html>
 * ```
 *
 * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.
 */
/**
 * Takes a base box-model property - e.g. margin / border / padding - along with a default
 * direction and value, and emits rules which apply the value to the
 * "<base-property>-<default-direction>" property by default, but flips the direction
 * when within an RTL context.
 *
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, left, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 8px;
 *     margin-left: 0;
 *   }
 * }
 * ```
 * whereas:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-box(margin, right, 8px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-right: 8px;
 *
 *   @include mdc-rtl {
 *     margin-right: 0;
 *     margin-left: 8px;
 *   }
 * }
 * ```
 *
 * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,
 * e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.
 *
 * Note that this function will always zero out the original value in an RTL context. If you're
 * trying to flip the values, use mdc-rtl-reflexive-property().
 */
/**
 * Takes a base property and emits rules that assign <base-property>-left to <left-value> and
 * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.
 * For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-property(margin, auto, 12px);
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 * .mdc-foo {
 *   margin-left: auto;
 *   margin-right: 12px;
 *
 *   @include mdc-rtl {
 *     margin-left: 12px;
 *     margin-right: auto;
 *   }
 * }
 * ```
 *
 * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.
 */
/**
 * Takes an argument specifying a horizontal position property (either "left" or "right") as well
 * as a value, and applies that value to the specified position in a LTR context, and flips it in a
 * RTL context. For example:
 *
 * ```scss
 * .mdc-foo {
 *   @include mdc-rtl-reflexive-position(left, 0);
 *   position: absolute;
 * }
 * ```
 * is equivalent to:
 *
 * ```scss
 *  .mdc-foo {
 *    position: absolute;
 *    left: 0;
 *    right: initial;
 *
 *    @include mdc-rtl {
 *      right: 0;
 *      left: initial;
 *    }
 *  }
 * ```
 * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-list, mdc-list {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.04em;
  line-height: 1.75rem;
  /* @alternate */
  color: rgba(0, 0, 0, 0.87);
  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
  margin: 0;
  padding: 8px 16px 0;
  line-height: 1.5rem;
  list-style-type: none; }
  .mdc-list--theme-dark,
  .mdc-theme--dark .mdc-list,
  .mdc-theme--dark mdc-list {
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-list--dense {
  padding-top: 4px;
  font-size: .812rem; }

.mdc-list-item, mdc-list-item, mdc-simple-menu-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  height: 48px; }
  .mdc-list-item__start-detail {
    width: 24px;
    height: 24px;
    margin-left: 0;
    margin-right: 32px; }
    [dir="rtl"] .mdc-list-item .mdc-list-item__start-detail, [dir="rtl"] mdc-list-item .mdc-list-item__start-detail, [dir="rtl"] mdc-simple-menu-item .mdc-list-item__start-detail,
    .mdc-list-item[dir="rtl"] .mdc-list-item__start-detail, mdc-list-item[dir="rtl"] .mdc-list-item__start-detail, mdc-simple-menu-item[dir="rtl"] .mdc-list-item__start-detail {
      margin-left: 32px;
      margin-right: 0; }
  .mdc-list-item__end-detail {
    width: 24px;
    height: 24px;
    margin-left: auto;
    margin-right: 0; }
    [dir="rtl"] .mdc-list-item .mdc-list-item__end-detail, [dir="rtl"] mdc-list-item .mdc-list-item__end-detail, [dir="rtl"] mdc-simple-menu-item .mdc-list-item__end-detail,
    .mdc-list-item[dir="rtl"] .mdc-list-item__end-detail, mdc-list-item[dir="rtl"] .mdc-list-item__end-detail, mdc-simple-menu-item[dir="rtl"] .mdc-list-item__end-detail {
      margin-left: 0;
      margin-right: auto; }
  .mdc-list-item__text {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .mdc-list-item__text__secondary {
      font-family: Roboto, sans-serif;
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      font-size: 0.875rem;
      font-weight: 400;
      letter-spacing: 0.04em;
      line-height: 1.25rem;
      /* @alternate */
      color: rgba(0, 0, 0, 0.54);
      color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }
      .mdc-list-item__text__secondary--theme-dark,
      .mdc-theme--dark .mdc-list-item__text__secondary {
        /* @alternate */
        color: rgba(255, 255, 255, 0.7);
        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
      .mdc-list--dense .mdc-list-item__text__secondary {
        font-size: inherit; }
  .mdc-list--dense .mdc-list-item, .mdc-list--dense mdc-list-item, .mdc-list--dense mdc-simple-menu-item {
    height: 40px; }
    .mdc-list--dense .mdc-list-item__start-detail {
      width: 20px;
      height: 20px;
      margin-left: 0;
      margin-right: 36px; }
      [dir="rtl"] .mdc-list-item .mdc-list--dense .mdc-list-item__start-detail, [dir="rtl"] mdc-list-item .mdc-list--dense .mdc-list-item__start-detail, [dir="rtl"] mdc-simple-menu-item .mdc-list--dense .mdc-list-item__start-detail,
      .mdc-list-item[dir="rtl"] .mdc-list--dense .mdc-list-item__start-detail, mdc-list-item[dir="rtl"] .mdc-list--dense .mdc-list-item__start-detail, mdc-simple-menu-item[dir="rtl"] .mdc-list--dense .mdc-list-item__start-detail {
        margin-left: 36px;
        margin-right: 0; }
    .mdc-list--dense .mdc-list-item__end-detail {
      width: 20px;
      height: 20px; }
  .mdc-list--avatar-list .mdc-list-item, .mdc-list--avatar-list mdc-list-item, .mdc-list--avatar-list mdc-simple-menu-item {
    height: 56px; }
    .mdc-list--avatar-list .mdc-list-item__start-detail {
      width: 40px;
      height: 40px;
      margin-left: 0;
      margin-right: 16px;
      border-radius: 50%; }
      [dir="rtl"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__start-detail, [dir="rtl"] mdc-list-item .mdc-list--avatar-list .mdc-list-item__start-detail, [dir="rtl"] mdc-simple-menu-item .mdc-list--avatar-list .mdc-list-item__start-detail,
      .mdc-list-item[dir="rtl"] .mdc-list--avatar-list .mdc-list-item__start-detail, mdc-list-item[dir="rtl"] .mdc-list--avatar-list .mdc-list-item__start-detail, mdc-simple-menu-item[dir="rtl"] .mdc-list--avatar-list .mdc-list-item__start-detail {
        margin-left: 16px;
        margin-right: 0; }
  .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item, mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item, mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item {
    height: 48px; }
    .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {
      width: 36px;
      height: 36px;
      margin-left: 0;
      margin-right: 20px; }
      [dir="rtl"] .mdc-list-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-list-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-simple-menu-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] .mdc-list-item mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-list-item mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-simple-menu-item mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] .mdc-list-item mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-list-item mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, [dir="rtl"] mdc-simple-menu-item mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail,
      .mdc-list-item[dir="rtl"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-list-item[dir="rtl"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-simple-menu-item[dir="rtl"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail,
      .mdc-list-item[dir="rtl"] mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-list-item[dir="rtl"] mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-simple-menu-item[dir="rtl"] mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail,
      .mdc-list-item[dir="rtl"] mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-list-item[dir="rtl"] mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, mdc-simple-menu-item[dir="rtl"] mdc-simple-menu-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {
        margin-left: 20px;
        margin-right: 0; }
  .mdc-list--two-line .mdc-list-item, .mdc-list--two-line mdc-list-item, .mdc-list--two-line mdc-simple-menu-item {
    height: 72px; }
  .mdc-list--two-line.mdc-list--dense .mdc-list-item, .mdc-list--two-line.mdc-list--dense mdc-list-item, .mdc-list--two-line.mdc-list--dense mdc-simple-menu-item {
    height: 60px; }

a.mdc-list-item {
  color: inherit;
  text-decoration: none; }

.mdc-list-item.mdc-ripple-upgraded, mdc-list-item.mdc-ripple-upgraded, mdc-simple-menu-item.mdc-ripple-upgraded {
  --mdc-ripple-surface-width: 0;
  --mdc-ripple-surface-height: 0;
  --mdc-ripple-fg-size: 0;
  --mdc-ripple-left: 0;
  --mdc-ripple-top: 0;
  --mdc-ripple-fg-scale: 1;
  --mdc-ripple-fg-translate-end: 0;
  --mdc-ripple-fg-translate-start: 0;
  will-change: transform, opacity;
  -webkit-tap-highlight-color: transparent;
  left: -16px;
  right: initial;
  position: relative;
  width: 100%;
  padding: 0 16px;
  overflow: hidden; }
  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after, mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after, mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after {
    -webkit-transition-duration: 85ms;
            transition-duration: 85ms;
    opacity: .6; }
  .mdc-list-item.mdc-ripple-upgraded::before, mdc-list-item.mdc-ripple-upgraded::before, mdc-simple-menu-item.mdc-ripple-upgraded::before {
    background-color: rgba(0, 0, 0, 0.06);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-list-item.mdc-ripple-upgraded::after, mdc-list-item.mdc-ripple-upgraded::after, mdc-simple-menu-item.mdc-ripple-upgraded::after {
    background-color: rgba(0, 0, 0, 0.06);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after, mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after, mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }
  [dir="rtl"] .mdc-list-item.mdc-ripple-upgraded, [dir="rtl"] mdc-list-item.mdc-ripple-upgraded, [dir="rtl"] mdc-simple-menu-item.mdc-ripple-upgraded, .mdc-list-item.mdc-ripple-upgraded[dir="rtl"], mdc-list-item.mdc-ripple-upgraded[dir="rtl"], mdc-simple-menu-item.mdc-ripple-upgraded[dir="rtl"] {
    left: initial;
    right: -16px; }
  .mdc-list-item.mdc-ripple-upgraded:focus, mdc-list-item.mdc-ripple-upgraded:focus, mdc-simple-menu-item.mdc-ripple-upgraded:focus {
    outline: none; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::before, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded::before, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded::before,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::before,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded::before,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded::before {
    background-color: rgba(255, 255, 255, 0.12);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {
    opacity: .99999; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {
    /* @alternate */
    top: calc(50% - 50%);
    top: var(--mdc-ripple-top, calc(50% - 50%));
    /* @alternate */
    left: calc(50% - 50%);
    left: var(--mdc-ripple-left, calc(50% - 50%));
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));
            transform: scale(var(--mdc-ripple-fg-scale, 0)); }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded::after {
    background-color: rgba(255, 255, 255, 0.12);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transition: opacity 250ms linear;
    transition: opacity 250ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {
    top: 0;
    left: 0;
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    opacity: 0; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {
    /* @alternate */
    top: 0;
    top: var(--mdc-ripple-top, 0);
    /* @alternate */
    left: 0;
    left: var(--mdc-ripple-left, 0);
    /* @alternate */
    width: 100%;
    width: var(--mdc-ripple-fg-size, 100%);
    /* @alternate */
    height: 100%;
    height: var(--mdc-ripple-fg-size, 100%);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {
    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;
            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-list--theme-dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-list--theme-dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after,
  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after,
  .mdc-theme--dark mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after,
  .mdc-theme--dark mdc-simple-menu-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));
    -webkit-animation: 83ms mdc-ripple-fg-opacity-out;
            animation: 83ms mdc-ripple-fg-opacity-out; }

.mdc-list-divider, mdc-divider, mdc-divider-inset {
  height: 0;
  margin: 0;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }
  .mdc-list--theme-dark .mdc-list-divider, .mdc-list--theme-dark mdc-divider, .mdc-list--theme-dark mdc-divider-inset,
  .mdc-theme--dark .mdc-list-divider,
  .mdc-theme--dark mdc-divider,
  .mdc-theme--dark mdc-divider-inset {
    border-bottom-color: rgba(255, 255, 255, 0.2); }

.mdc-list-divider--inset, mdc-divider-inset {
  margin-left: 56px;
  margin-right: 0;
  width: calc(100% - 56px); }
  [dir="rtl"] .mdc-list-group .mdc-list-divider--inset, [dir="rtl"] .mdc-list-group mdc-divider-inset,
  .mdc-list-group[dir="rtl"] .mdc-list-divider--inset,
  .mdc-list-group[dir="rtl"] mdc-divider-inset {
    margin-left: 0;
    margin-right: 56px; }

.mdc-list-group {
  padding: 0 16px; }
  .mdc-list-group__subheader {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.875rem;
    font-weight: 500;
    letter-spacing: 0.04em;
    line-height: 1.5rem;
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));
    margin: 0.75rem 0; }
    .mdc-list-group__subheader--theme-dark,
    .mdc-theme--dark .mdc-list-group__subheader {
      /* @alternate */
      color: white;
      color: var(--mdc-theme-text-primary-on-dark, white); }
  .mdc-list-group .mdc-list, .mdc-list-group mdc-list {
    padding: 0; }

mdc-list {
  display: block; }

mdc-divider {
  display: block; }

mdc-divider-inset {
  display: block; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* postcss-bem-linter: define simple-menu */
.mdc-simple-menu, mdc-simple-menu {
  display: none;
  position: absolute;
  min-width: 170px;
  max-width: calc(100vw - 32px);
  max-height: calc(100vh - 32px);
  margin: 0;
  padding: 0;
  -webkit-transform: scale(0);
          transform: scale(0);
  -webkit-transform-origin: top left;
          transform-origin: top left;
  border-radius: 2px;
  background-color: white;
  white-space: nowrap;
  opacity: 0;
  overflow: hidden;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  will-change: transform, opacity;
  z-index: 4;
  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  /* stylelint-disable plugin/selector-bem-pattern */
  /* stylelint-enable plugin/selector-bem-pattern */
  /* stylelint-disable plugin/selector-bem-pattern */
  /* stylelint-disable selector-no-qualifying-type */
  /* stylelint-enable selector-no-qualifying-type */
  /* TODO(sgomes): Revisit when we have interactive lists. */
  /* stylelint-enable plugin/selector-bem-pattern */ }
  .mdc-simple-menu--theme-dark,
  .mdc-theme--dark .mdc-simple-menu,
  .mdc-theme--dark mdc-simple-menu {
    background-color: #424242; }
  .mdc-simple-menu:focus, mdc-simple-menu:focus {
    outline: none; }
  .mdc-simple-menu--open {
    display: inline-block;
    -webkit-transform: scale(1);
            transform: scale(1);
    opacity: 1; }
  .mdc-simple-menu--animating {
    display: inline-block;
    -webkit-transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1); }
  .mdc-simple-menu__items {
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    will-change: transform;
    /* stylelint-disable plugin/selector-bem-pattern, selector-no-universal */
    /* stylelint-enable plugin/selector-bem-pattern, selector-no-universal */ }
    .mdc-simple-menu__items > * {
      opacity: 0; }
    .mdc-simple-menu__items > .mdc-list-item, .mdc-simple-menu__items > mdc-list-item, .mdc-simple-menu__items > mdc-simple-menu-item {
      cursor: pointer; }
    .mdc-simple-menu--animating .mdc-simple-menu__items {
      overflow-y: hidden; }
      .mdc-simple-menu--animating .mdc-simple-menu__items > * {
        -webkit-transition-duration: 0.3s;
                transition-duration: 0.3s;
        -webkit-transition-property: opacity;
        transition-property: opacity;
        -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
                transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
    .mdc-simple-menu--open .mdc-simple-menu__items > * {
      opacity: 1;
      will-change: opacity; }
  [dir="rtl"] .mdc-simple-menu, [dir="rtl"] mdc-simple-menu {
    -webkit-transform-origin: top right;
            transform-origin: top right; }
  .mdc-simple-menu--open-from-top-left {
    -webkit-transform-origin: top left !important;
            transform-origin: top left !important; }
  .mdc-simple-menu--open-from-top-right {
    -webkit-transform-origin: top right !important;
            transform-origin: top right !important; }
  .mdc-simple-menu--open-from-bottom-left {
    -webkit-transform-origin: bottom left !important;
            transform-origin: bottom left !important; }
  .mdc-simple-menu--open-from-bottom-right {
    -webkit-transform-origin: bottom right !important;
            transform-origin: bottom right !important; }
  .mdc-simple-menu .mdc-list-group, mdc-simple-menu .mdc-list-group,
  .mdc-simple-menu .mdc-list, mdc-simple-menu .mdc-list,
  .mdc-simple-menu mdc-list, mdc-simple-menu mdc-list {
    padding: 8px 0; }
  .mdc-simple-menu .mdc-list-item, mdc-simple-menu .mdc-list-item, .mdc-simple-menu mdc-list-item, mdc-simple-menu mdc-list-item, .mdc-simple-menu mdc-simple-menu-item, mdc-simple-menu mdc-simple-menu-item {
    position: relative;
    padding: 0 16px;
    outline: none;
    color: inherit;
    text-decoration: none;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 1rem;
    font-weight: 400;
    letter-spacing: 0.04em;
    line-height: 1.75rem; }
    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item, mdc-simple-menu.mdc-simple-menu--theme-dark .mdc-list-item, .mdc-simple-menu--theme-dark.mdc-simple-menu mdc-list-item, mdc-simple-menu.mdc-simple-menu--theme-dark mdc-list-item, .mdc-simple-menu--theme-dark.mdc-simple-menu mdc-simple-menu-item, mdc-simple-menu.mdc-simple-menu--theme-dark mdc-simple-menu-item,
    .mdc-theme--dark .mdc-simple-menu .mdc-list-item,
    .mdc-theme--dark mdc-simple-menu .mdc-list-item,
    .mdc-theme--dark .mdc-simple-menu mdc-list-item,
    .mdc-theme--dark mdc-simple-menu mdc-list-item,
    .mdc-theme--dark .mdc-simple-menu mdc-simple-menu-item,
    .mdc-theme--dark mdc-simple-menu mdc-simple-menu-item {
      color: white; }
  .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-divider, mdc-simple-menu.mdc-simple-menu--theme-dark .mdc-list-divider, .mdc-simple-menu--theme-dark.mdc-simple-menu mdc-divider, mdc-simple-menu.mdc-simple-menu--theme-dark mdc-divider, .mdc-simple-menu--theme-dark.mdc-simple-menu mdc-divider-inset, mdc-simple-menu.mdc-simple-menu--theme-dark mdc-divider-inset,
  .mdc-theme--dark .mdc-simple-menu .mdc-list-divider,
  .mdc-theme--dark mdc-simple-menu .mdc-list-divider,
  .mdc-theme--dark .mdc-simple-menu mdc-divider,
  .mdc-theme--dark mdc-simple-menu mdc-divider,
  .mdc-theme--dark .mdc-simple-menu mdc-divider-inset,
  .mdc-theme--dark mdc-simple-menu mdc-divider-inset {
    border-color: rgba(255, 255, 255, 0.12); }
  .mdc-simple-menu .mdc-list-item__start-detail, mdc-simple-menu .mdc-list-item__start-detail {
    color: rgba(0, 0, 0, 0.54); }
    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item__start-detail, mdc-simple-menu.mdc-simple-menu--theme-dark .mdc-list-item__start-detail,
    .mdc-theme--dark .mdc-simple-menu .mdc-list-item__start-detail,
    .mdc-theme--dark mdc-simple-menu .mdc-list-item__start-detail {
      color: rgba(255, 255, 255, 0.54); }
  .mdc-simple-menu--selected.mdc-list-item, mdc-list-item.mdc-simple-menu--selected, mdc-simple-menu-item.mdc-simple-menu--selected,
  .mdc-simple-menu--selected.mdc-list-item .mdc-list-item__start-detail, mdc-list-item.mdc-simple-menu--selected .mdc-list-item__start-detail, mdc-simple-menu-item.mdc-simple-menu--selected .mdc-list-item__start-detail {
    /* @alternate */
    color: #3f51b5;
    color: var(--mdc-theme-primary, #3f51b5); }
  .mdc-simple-menu .mdc-list-item::before, mdc-simple-menu .mdc-list-item::before, .mdc-simple-menu mdc-list-item::before, mdc-simple-menu mdc-list-item::before, .mdc-simple-menu mdc-simple-menu-item::before, mdc-simple-menu mdc-simple-menu-item::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -webkit-transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1);
    transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1);
    border-radius: inherit;
    background: currentColor;
    content: "";
    opacity: 0; }
  .mdc-simple-menu .mdc-list-item:focus::before, mdc-simple-menu .mdc-list-item:focus::before, .mdc-simple-menu mdc-list-item:focus::before, mdc-simple-menu mdc-list-item:focus::before, .mdc-simple-menu mdc-simple-menu-item:focus::before, mdc-simple-menu mdc-simple-menu-item:focus::before {
    opacity: .12; }
  .mdc-simple-menu .mdc-list-item:active::before, mdc-simple-menu .mdc-list-item:active::before, .mdc-simple-menu mdc-list-item:active::before, mdc-simple-menu mdc-list-item:active::before, .mdc-simple-menu mdc-simple-menu-item:active::before, mdc-simple-menu mdc-simple-menu-item:active::before {
    /*
      Slightly darker value for visual distinction.
      This allows a full base that has distinct modes.
      Progressive enhancement with ripples will provide complete button spec alignment.
    */
    opacity: .18; }
  .mdc-simple-menu .mdc-list-item[aria-disabled="true"], mdc-simple-menu .mdc-list-item[aria-disabled="true"], .mdc-simple-menu mdc-list-item[aria-disabled="true"], mdc-simple-menu mdc-list-item[aria-disabled="true"], .mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"], mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"] {
    cursor: default;
    /* @alternate */
    color: rgba(0, 0, 0, 0.38);
    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
    .mdc-select--theme-dark .mdc-simple-menu .mdc-list-item[aria-disabled="true"], .mdc-select--theme-dark mdc-simple-menu .mdc-list-item[aria-disabled="true"], .mdc-select--theme-dark .mdc-simple-menu mdc-list-item[aria-disabled="true"], .mdc-select--theme-dark mdc-simple-menu mdc-list-item[aria-disabled="true"], .mdc-select--theme-dark .mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"], .mdc-select--theme-dark mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"],
    .mdc-theme--dark .mdc-simple-menu .mdc-list-item[aria-disabled="true"],
    .mdc-theme--dark mdc-simple-menu .mdc-list-item[aria-disabled="true"],
    .mdc-theme--dark .mdc-simple-menu mdc-list-item[aria-disabled="true"],
    .mdc-theme--dark mdc-simple-menu mdc-list-item[aria-disabled="true"],
    .mdc-theme--dark .mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"],
    .mdc-theme--dark mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"] {
      /* @alternate */
      color: rgba(255, 255, 255, 0.5);
      color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
  .mdc-simple-menu .mdc-list-item[aria-disabled="true"]:focus::before, mdc-simple-menu .mdc-list-item[aria-disabled="true"]:focus::before, .mdc-simple-menu mdc-list-item[aria-disabled="true"]:focus::before, mdc-simple-menu mdc-list-item[aria-disabled="true"]:focus::before, .mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"]:focus::before, mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"]:focus::before, .mdc-simple-menu .mdc-list-item[aria-disabled="true"]:active::before, mdc-simple-menu .mdc-list-item[aria-disabled="true"]:active::before, .mdc-simple-menu mdc-list-item[aria-disabled="true"]:active::before, mdc-simple-menu mdc-list-item[aria-disabled="true"]:active::before, .mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"]:active::before, mdc-simple-menu mdc-simple-menu-item[aria-disabled="true"]:active::before {
    opacity: 0; }

/* postcss-bem-linter: end */
.mdc-menu-anchor, mdc-menu-anchor {
  position: relative;
  overflow: visible; }

/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
.mdc-switch, mdc-switch {
  display: inline-block;
  position: relative; }
  .mdc-switch__native-control {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    width: 34px;
    height: 14px;
    cursor: pointer;
    opacity: 0;
    z-index: 2; }
  .mdc-switch__background {
    display: block;
    position: relative;
    width: 34px;
    height: 14px;
    border-radius: 7px;
    outline: none;
    background-color: transparent;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
    .mdc-switch--theme-dark .mdc-switch__background,
    .mdc-theme--dark .mdc-switch__background {
      background-color: transparent; }
    .mdc-switch__background::before {
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      -webkit-transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
      border-radius: 7px;
      background-color: #000;
      content: "";
      opacity: .38; }
      .mdc-switch--theme-dark .mdc-switch__background::before,
      .mdc-theme--dark .mdc-switch__background::before {
        background-color: #fff;
        opacity: .3; }
    .mdc-switch__background .mdc-switch__knob {
      display: block;
      position: absolute;
      top: -3px;
      left: 0;
      width: 20px;
      height: 20px;
      -webkit-transform: translateX(0);
              transform: translateX(0);
      -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
      transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
      border-radius: 10px;
      background-color: #fafafa;
      -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
              box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
      z-index: 1; }
      .mdc-switch--theme-dark .mdc-switch__background .mdc-switch__knob,
      .mdc-theme--dark .mdc-switch__background .mdc-switch__knob {
        background-color: #bdbdbd; }
      .mdc-switch__background .mdc-switch__knob::before {
        position: absolute;
        top: -14px;
        left: -14px;
        width: 48px;
        height: 48px;
        -webkit-transform: scale(0);
                transform: scale(0);
        -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
        transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
        transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
        transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
        border-radius: 24px;
        background-color: transparent;
        content: "";
        opacity: .2; }

.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {
  position: absolute;
  width: 48px;
  height: 48px;
  -webkit-transform: scale(1);
          transform: scale(1);
  -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 24px;
  background-color: #9e9e9e; }
  .mdc-switch--theme-dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before,
  .mdc-theme--dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {
    background-color: #f1f1f1;
    opacity: .14; }

.mdc-switch__native-control:checked ~ .mdc-switch__background::before {
  /* @alternate */
  background-color: #3f51b5;
  background-color: var(--mdc-theme-primary, #3f51b5);
  opacity: .5; }

.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob {
  -webkit-transform: translateX(14px);
          transform: translateX(14px);
  -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);
  /* @alternate */
  background-color: #3f51b5;
  background-color: var(--mdc-theme-primary, #3f51b5); }
  .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {
    /* @alternate */
    background-color: #3f51b5;
    background-color: var(--mdc-theme-primary, #3f51b5);
    opacity: .15; }
    .mdc-switch--theme-dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before,
    .mdc-theme--dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {
      /* @alternate */
      background-color: #3f51b5;
      background-color: var(--mdc-theme-primary, #3f51b5); }

.mdc-switch__native-control:disabled {
  cursor: initial; }

.mdc-switch__native-control:disabled ~ .mdc-switch__background::before {
  background-color: #000;
  opacity: .12; }
  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before,
  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before {
    background-color: #fff;
    opacity: .1; }

.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {
  background-color: #bdbdbd; }
  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob,
  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {
    background-color: #424242; }
